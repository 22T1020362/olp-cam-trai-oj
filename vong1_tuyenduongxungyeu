#include <bits/stdc++.h>
using namespace std;

#define ar array
using i64 = long long;

const int maxN = 200;
 
int timeDfs = 0;
int low[maxN], num[maxN];
vector <int> adj[maxN];
int ans = 0;
 
void dfs(int u , int par) {
  num[u] = low[u] = ++timeDfs;
  for (int v : adj[u]) {
      if (v == par) continue;
      if (!num[v]){
          dfs(v , u);
          low[u] = min(low[u], low[v]);
          if(low[v] == num[v]) ++ans;
      }
      else low[u] = min(low[u], num[v]);
  } 
}
 
void Solve()
{
  int n , m;
  cin >> n >> m;
  for (int i = 0 ; i < m ; i++) {
    int u , v;
    cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  // dfs(1 , 1);
  for (int i = 1 ; i <= n ; i++) {
    if (!num[i]) dfs(i , i);
  }
  cout << ans;
}

int main()
{
    cin.tie(0) -> sync_with_stdio(false);
    int TC = 1;
    //cin >> TC;
    while (TC-->0)
        Solve();
    return 0; 
}
