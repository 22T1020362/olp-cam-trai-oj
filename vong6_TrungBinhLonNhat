#include <bits/stdc++.h>
#define taskname "D"
using namespace std;

typedef long double ld;

void Input(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	if(fopen(taskname".inp", "r")){
		freopen(taskname".inp", "r", stdin);
		freopen(taskname".out", "w", stdout);
	}
}

void Solve(){
	int n, k; cin >> n >> k;
	vector<ld> a(n + 1, 0.l);
	for (int i = 1; i <= n; i++) cin >> a[i];

	auto check = [&](ld x){
		vector<ld> val(n + 1, 0);
		for (int i = 1; i <= n; i++) val[i] = val[i - 1] + (a[i] - x);

		ld minVal = 0;
		for (int i = k; i <= n; i++) {
			minVal = min(minVal, val[i - k]);
			if (val[i] - minVal >= 0) return true;
		}

		return false;
	};

	ld l = -1e9-10, r = 1e9+10;
	for (int i = 1; i <= 100; i++) {
		ld m = (l + r) / 2.0l;
		if (check(m)) l = m;
		else r = m;
	}

	cout << fixed << setprecision(3) << l;
}

int main(){
	Input();
	Solve();
	return 0;
}
