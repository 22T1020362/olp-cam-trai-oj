#include <bits/stdc++.h>
#define taskname "J"
using namespace std;

typedef long long ll;

void Input(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	if(fopen(taskname".inp", "r")){
		freopen(taskname".inp", "r", stdin);
		freopen(taskname".out", "w", stdout);
	}
}

void Solve(){
	vector<ll> A[4];
	ll base;

	ll n, W; cin >> n >> W;
	for (int i = 1; i <= n; i++) {
		int w, v; cin >> w >> v;
		if (i == 1) base = w;
		A[w - base].push_back(v);
	}

	for (int i = 0; i < 4; i++) {
		sort(A[i].begin(), A[i].end());
		A[i].push_back(0);
		reverse(A[i].begin(), A[i].end());
		for (int j = 1; j < A[i].size(); j++)
			A[i][j] += A[i][j-1];
	}

	ll ans = 0;
	for (ll i = 0; i < A[0].size(); i++)
		for (ll j = 0; j < A[1].size(); j++)
			for (ll k = 0; k < A[2].size(); k++)
				for (ll l = 0; l < A[3].size(); l++) 
					if (i * base + j * (base + 1) + k * (base + 2) + l * (base + 3) <= W)
						ans = max(ans, A[0][i] + A[1][j] + A[2][k] + A[3][l]);

	cout << ans;
}

int main(){
	Input();
	Solve();
	return 0;
}
